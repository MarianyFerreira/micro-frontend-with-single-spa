 <!DOCTYPE html>
 <html lang="en">

 <head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <meta http-equiv="X-UA-Compatible" content="ie=edge">
   <title>MICRO FRONTENDS - SINGLE SPA</title>
   <!--
     Remove this if you only support browsers that support async/await.
     This is needed by babel to share largeish helper code for compiling async/await in older
     browsers. More information at https://github.com/single-spa/create-single-spa/issues/112
   -->
   <script src="https://cdn.jsdelivr.net/npm/regenerator-runtime@0.13.5/runtime.min.js"></script>
   <!--
     This CSP allows any SSL-enabled host, but you should limit these directives further to increase your app's security.
     Learn more about CSP policies at https://content-security-policy.com/#directive
   -->
   <meta http-equiv="Content-Security-Policy" content="default-src 'self' https: localhost:*; script-src 'unsafe-inline' https: localhost:*; connect-src https: localhost:* ws://localhost:*; style-src 'unsafe-inline' https:; object-src 'none';">
   <meta name="importmap-type" content="systemjs-importmap" />
 
   <!-- Shared dependencies go into this import map. Your shared dependencies must be of one of the following formats:
 
     1. System.register (preferred when possible) - https://github.com/systemjs/systemjs/blob/master/docs/system-register.md
     2. UMD - https://github.com/umdjs/umd
     3. Global variable
 
     More information about shared dependencies can be found at https://single-spa.js.org/docs/recommended-setup#sharing-with-import-maps.
   -->
   <script type="systemjs-importmap">
     {
       "imports": {
         "single-spa": "../node_modules/single-spa/lib/system/single-spa.min.js",
         "react": "../node_modules/react/umd/react.production.min.js",
         "react-dom": "../node_modules/react-dom/umd/react-dom.production.min.js"
       }
     }
   </script>
 
   <!-- Add your organization's prod import map URL to this script's src  -->
   <!-- <script type="systemjs-importmap" src="/importmap.json"></script> -->
 
   <% if (isLocal) { %>
   <script type="systemjs-importmap">
     {
       "imports": {
         "@myf/root-config": "//localhost:3000/myf-root-config.js",
 
         "@myf/styleguide": "//localhost:3001/myf-styleguide.js",
 
         "@myf/spa": "//localhost:4000/myf-spa.js",
         "@myf/app1": "//localhost:4001/myf-app1.js",
         "@myf/app2": "//localhost:4002/myf-app2.js"
       }
     }
   </script>
   <% } %>
 
   <% if (isLocal) { %>
     <script src="../node_modules/import-map-overrides/dist/import-map-overrides.js"></script>
     <script src="../node_modules/systemjs/dist/system.js"></script>
     <script src="../node_modules/systemjs/dist/extras/amd.js"></script>
     <script src="../node_modules/systemjs/dist/extras/named-exports.js"></script>
     <% } else { %>
     <script src="../node_modules/import-map-overrides/dist/import-map-overrides.js"></script>
     <script src="../node_modules/systemjs/dist/system.min.js"></script>
     <script src="../node_modules/systemjs/dist/extras/amd.min.js"></script>
     <script src="../node_modules/systemjs/dist/extras/named-exports.min.js"></script>
     <% } %>
 
     <template id="single-spa-layout">
       <single-spa-router>
         <div id="myf-spa">
           <application name="@myf/spa"></application>
           <div id="myf-spa-content">
             <route default>
               <application name="@myf/app1"></application>
             </route>
             <route path="app2">
               <application name="@myf/app2"></application>
             </route>
           </div>
         </div>
       </single-spa-router>
     </template>
 </head>
 
 <body>
   <main>
   </main>
   <script>
     System.import('@myf/root-config');
     System.import('@myf/styleguide');
   </script>
   <import-map-overrides-full show-when-local-storage="devtools" dev-libs></import-map-overrides-full>
 </body>
 
 </html>
